MathOCR帮助文档


文档识别

文档识别的一般流程如下：
(1) 在"文件"菜单中选"文档识别"
(2) 在文件对话框中选择所有页面图像
(3) 交互式图像预处理(可以在配置设置跳过)
	- 点"裁剪"再点图像中两点, 则两点确定对角线的矩形外部分被裁去
	- 点"均值滤波"、"中值滤波"、"kFill"或"噪声去除"将使对应滤波器被应用
	- 点"Sauvola方法"、"Otsu方法"、或"手动阈值"将使对应二值化方法被应用(必须选其中一个)
	- 点"反色"则在"检测黑底白字"沒有被选或黑像素为主时反转图像的颜色
	- 点"倾斜检测"将以默认倾斜检测方法检测倾斜弧度并显示下面在文本框中
	- 点图像中两点也可显示它们确定基线时的倾斜弧度
	- 点"倾斜校正"则图像将被旋转指定弧度逆时针方向
	- 点"撤销修改"可以放弃所有修改
	- 点"下一步"以结束图像预处理阶段
(4) 交互式连通域分析(可以在配置设置跳过)
	- 选择"删除"再点一个演示连通域的方框的内部，则该连通域被删除
	- 选择"合并"再接连点两个演示连通域的方框的内部，则该两连通域被合并
	- 选择"垂直分割"再点一个演示连通域的方框的内部，则该连通域按所点处纵坐标分为上下两个连通域
	- 选择"水平分割"再点一个演示连通域的方框的内部，则该连通域按所点处横坐标分为左右两个连通域
	- 选择"清洗页面边缘"以消除与图像边界邻接的连通域
	- 点"下一步"结束连通域分析
(5) 交互式物理版面分析(可以在配置设置跳过)
	- 与上面修改连通域分析结果类似的方法可修改物理版面分割结果
	- 点"区域分类"可自动检测各物理块的类型
	- 点"修正区域分类"、选定类型再点一个物理块可以修改该物理块的类型
	- 点"阅读顺序排序"将自动对各物理块进行排序
	- 点"手动重排顺序排序"然后按期望的阅读顺序依次点物理块可以重排阅读顺序
	- 点"提取行"可以把文本块自动分为行
	- 点"分裂行"再点一个演示行的方框的内部，则该行按所点处纵坐标分为上下两行
	- 点"与下一行合并"可再点一个演示行的方框的内部，则该行将与下面一行合并
	- 点"下一步"结束物理版面分析
(6) 交互式逻辑版面分析(可以在配置设置跳过)
	- 点一个逻辑文本块以决定修改对象
	- 点"删除"将删除当前选中的逻辑块
	- 可以在下拉列表选择类型
	- 可以在文本框修改内容
	- 作修改后点"修改"使修改生效
	- 点"下一步"结束逻辑版面分析
(7) 显示识别结果
	- 可以选择输出格式为LaTeX或HTML

	
数学公式识别

文档识别的一般流程如下：
(1) 在"文件"菜单中选"数学公式识别"或"数学公式识别(来自截屏)"
(2) 选择图像
	- 若选了"数学公式识别", 在文件对话框中选择所有数学公式图像
	- 若选了"数学公式识别(来自截屏)", 用红色方框把欲截取的屏幕范围框起来后，点方框的左上角
(3) 交互式图像预处理, 参考文档识别部分
(4) 交互式连通域分析, 参考文档识别部分
(5) 交互式符号识别(可以在配置设置跳过)
	- 各个符号被标出, 可信度指标较低者会以绿色标出
	- 把鼠标移到一个符号上将显示各候选和相应的可信度指标
	- 点"删除"再点图中一个符号, 则对该字符的识别将被删除
	- 点选择"修改"再点图中一个符号, 再在对话框中选择或创建一个符号, 则该符号的识别结果将被修改
	- 点"新增"再点图中两点, 再在对话框中选择或创建一个符号, 两点确定的像素边界内部会被认为是一个符号且有给定的识别
	- 点"下一步"结束符号识别
(6) 交互式结构分析(可以在配置设置跳过)
	- 各个子公式被标出
	- 点"显示单步合并"将进行一趟合并
	- 点"下一步"完成结构分析
(7) 显示识别结果
	- 输出格式为LaTeX


字体训练（仅针对高级用户）

字体训练的一般流程如下：
(1) 在"开发工具"菜单中选"字体训练"，然后在对话框中选择要训练字体文件（可多选），对于每个字体文件在同一目录中应有相应字体列表且文件名为在字体文件中把后缀换为“.nam”
(2) 生成的数据文件会被放到字体文件所在目录，文件为为字体文件再后接“.lg”
(3) 如果选择了“生成测试用图片”，图片被放到字体文件所在目录，文件为为字体文件再后接“.png”
(4) 如果选择了“显示数据”，则字符和字形的部分信息会被显示在右侧表格中

注：
(1)字体列表为以UTF-8编码的文本文件，每一行表示一个字符，包含由制表符分隔的代码点、文本模式LaTeX代码和数学模式LaTeX代码，格式形如：
0x0041	A	A
(2)字体大小以磅值为单位


配置

(1) 在"文件"菜单中选"配置"
(2) 修改选项
	-  对于布尔值选项, 选择或反选择复选框即使修改生效
	-  对于其它选项, 在文本框修改值后按回车以使修改生效，新的值应符合文本框提示中的要求


使用MathOCR的命令行界面

使用选项-cli将使命令行界被使用, 用法为:
java -jar MathOCR.jar -cli [选项] 文件...
关于选项的信息请使用使用命令:
java -jar MathOCR.jar -cli


使用MathOCR识别系统的API（仅针对开发者）

(1) 把MathOCR的JAR文件放到类搜索路径
(2) 导入有关类
import net.sf.mathocr.*;
import net.sf.mathocr.layout.*;
(*) 设置参数
使用net.sf.mathocr.Environment.env的方法设置
(3) 构造文档对象并把各页依次加入
Document doc=new Document();
while(/*检验有更多页面*/)
	doc.addPage(new Page(/*以File、URL、InputStream或BufferedImage形式提供的页面对象*/,doc));
(4) 进行识别
String result=BatchProcessor.recognize(doc,/*BatchProcessor.LATEX或BatchProcessor.HTML*/);

如果你打算识别数学公式而非整个文档, 把 (3) 和 (4) 替换为
(3') BatchProcessor.recognizeFormula(bufferedImage);
